AWSTemplateFormatVersion: 2010-09-09
Description: EC2-based Discord bot with Elasticsearch
Parameters:
    ArtifactBucket:
        Description: S3 bucket containing bot code
        Type: String
    ArtifactName:
        Description: S3 artifact object key
        Type: String
    AMIId:
        Description: AMI ID for EC2 instance
        Type: String
        Default: ami-0dbc3d7bc646e8516

Resources:
    EC2Role:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                        Service: ec2.amazonaws.com
                      Action: sts:AssumeRole
            Policies:
              - PolicyName: BotEC2Policy
                PolicyDocument:
                    Version: 2012-10-17
                    Statement:
                      - Effect: Allow
                        Action:
                          - logs:*
                          - lambda:*
                          - dynamodb:*
                          - translate:*
                          - comprehend:*
                          - s3:*
                          - secretsmanager:*
                          - xray:PutTraceSegments
                          - xray:PutTelemetryRecords
                        Resource: "*"
                      - Effect: Allow
                        Action: es:*
                        Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/my-es-domain/*

    EC2InstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            Roles:
                - Ref: EC2Role

    EC2SecurityGroup:
      Type: 'AWS::EC2::SecurityGroup'
      Properties:
        GroupDescription: 'Security group for EC2 instance running Discord Bot'


    BotEC2Instance:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: !Ref AMIId
            InstanceType: t2.micro
            IamInstanceProfile: !Ref EC2InstanceProfile
            SecurityGroupIds:
                - !Ref EC2SecurityGroup
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    yum update -y
                    yum install -y unzip aws-cli dotnet-sdk-3.1
                    aws s3 cp s3://${ArtifactBucket}/${ArtifactName} /tmp/artif.zip
                    unzip /tmp/artif.zip -d /opt/bot/
                    cd /opt/bot/
                    dotnet YourBotAssembly.dll
    ElasticsearchKMSKey:
      Type: 'AWS::KMS::Key'
      Properties:
        Description: 'KMS key for Elasticsearch node-to-node encryption'
        KeyPolicy:
          Version: '2012-10-17'
          Id: 'key-default-1'
          Statement:
          - Sid: 'Enable IAM User Permissions'
            Effect: 'Allow'
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: 'Allow access through AWS Elasticsearch'
            Effect: 'Allow'
            Principal:
              Service: 'es.amazonaws.com'
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:CreateGrant'
              - 'kms:DescribeKey'
            Resource: '*'
          - Sid: 'Allow EC2 instance to use the KMS key'
            Effect: 'Allow'
            Principal:
              AWS: !GetAtt EC2Role.Arn
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:DescribeKey'
            Resource: '*'
           
    ElasticsearchDomain:
        Type: AWS::OpenSearchService::Domain
        Properties:
            DomainName: council-es
            EBSOptions:
                EBSEnabled: true
                VolumeSize: 10
            NodeToNodeEncryptionOptions:
                Enabled: true
            EncryptionAtRestOptions:
                Enabled: true
                KmsKeyId: !Ref ElasticsearchKMSKey
            ClusterConfig:
                InstanceType: t3.small.search
                InstanceCount: 1
            AccessPolicies:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                        AWS: !Sub arn:aws:iam::${AWS::AccountId}:role/${EC2Role}
                      Action: es:ESHttp*
                      Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/ouncil-es/*
